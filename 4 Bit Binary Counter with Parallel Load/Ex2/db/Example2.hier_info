|Example2
co <= lpm_counter1:inst.cout
sload => lpm_counter1:inst.sload
updown => lpm_counter1:inst.updown
clock => lpm_counter1:inst.clock
count => lpm_counter1:inst.cnt_en
data[0] => lpm_counter1:inst.data[0]
data[1] => lpm_counter1:inst.data[1]
data[2] => lpm_counter1:inst.data[2]
data[3] => lpm_counter1:inst.data[3]
q[0] <= lpm_counter1:inst.q[0]
q[1] <= lpm_counter1:inst.q[1]
q[2] <= lpm_counter1:inst.q[2]
q[3] <= lpm_counter1:inst.q[3]


|Example2|lpm_counter1:inst
aclr => lpm_counter:LPM_COUNTER_component.aclr
aload => lpm_counter:LPM_COUNTER_component.aload
aset => lpm_counter:LPM_COUNTER_component.aset
cin => lpm_counter:LPM_COUNTER_component.cin
clk_en => lpm_counter:LPM_COUNTER_component.clk_en
clock => lpm_counter:LPM_COUNTER_component.clock
cnt_en => lpm_counter:LPM_COUNTER_component.cnt_en
data[0] => lpm_counter:LPM_COUNTER_component.data[0]
data[1] => lpm_counter:LPM_COUNTER_component.data[1]
data[2] => lpm_counter:LPM_COUNTER_component.data[2]
data[3] => lpm_counter:LPM_COUNTER_component.data[3]
sclr => lpm_counter:LPM_COUNTER_component.sclr
sload => lpm_counter:LPM_COUNTER_component.sload
sset => lpm_counter:LPM_COUNTER_component.sset
updown => lpm_counter:LPM_COUNTER_component.updown
cout <= lpm_counter:LPM_COUNTER_component.cout
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]


|Example2|lpm_counter1:inst|lpm_counter:LPM_COUNTER_component
clock => cntr_ksl:auto_generated.clock
clk_en => cntr_ksl:auto_generated.clk_en
cnt_en => cntr_ksl:auto_generated.cnt_en
updown => cntr_ksl:auto_generated.updown
aclr => cntr_ksl:auto_generated.aclr
aset => cntr_ksl:auto_generated.aset
aconst => ~NO_FANOUT~
aload => cntr_ksl:auto_generated.aload
sclr => cntr_ksl:auto_generated.sclr
sset => cntr_ksl:auto_generated.sset
sconst => ~NO_FANOUT~
sload => cntr_ksl:auto_generated.sload
data[0] => cntr_ksl:auto_generated.data[0]
data[1] => cntr_ksl:auto_generated.data[1]
data[2] => cntr_ksl:auto_generated.data[2]
data[3] => cntr_ksl:auto_generated.data[3]
cin => cntr_ksl:auto_generated.cin
q[0] <= cntr_ksl:auto_generated.q[0]
q[1] <= cntr_ksl:auto_generated.q[1]
q[2] <= cntr_ksl:auto_generated.q[2]
q[3] <= cntr_ksl:auto_generated.q[3]
cout <= cntr_ksl:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|Example2|lpm_counter1:inst|lpm_counter:LPM_COUNTER_component|cntr_ksl:auto_generated
aclr => aclr_actual~0.IN0
aclr => latch_signal[3].IN0
aclr => latch_signal[2].IN0
aclr => latch_signal[1].IN0
aclr => latch_signal[0].IN0
aclr => safe_q[3]~0.IN0
aload => mux211_dataout~0.IN0
aload => _~31.IN0
aload => mux213_dataout~0.IN0
aload => _~35.IN0
aload => mux215_dataout~0.IN0
aload => _~39.IN0
aload => mux217_dataout~0.IN0
aload => _~43.IN0
aload => aclr_actual.IN1
aload => _~51.IN0
aload => _~52.IN0
aload => _~53.IN0
aload => _~54.IN0
aload => _~55.IN0
aset => mux212_dataout~0.IN0
aset => _~33.IN0
aset => mux214_dataout~0.IN0
aset => _~37.IN0
aset => mux216_dataout~0.IN0
aset => _~41.IN0
aset => mux218_dataout~0.IN0
aset => _~45.IN0
aset => aclr_actual~0.IN1
aset => _~46.IN0
aset => _~47.IN0
aset => _~48.IN0
aset => _~49.IN0
aset => _~50.IN0
cin => counter_comb_bita0.CIN
clk_en => counter_reg_bit[3]~9.IN0
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _~26.IN0
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
data[0] => _~13.IN1
data[0] => _~30.IN0
data[0] => _~54.IN1
data[1] => _~12.IN1
data[1] => _~34.IN0
data[1] => _~53.IN1
data[2] => _~11.IN1
data[2] => _~38.IN0
data[2] => _~52.IN1
data[3] => _~10.IN1
data[3] => _~42.IN0
data[3] => _~51.IN1
q[0] <= safe_q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= safe_q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= safe_q[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= safe_q[3].DB_MAX_OUTPUT_PORT_TYPE
sclr => _~4.IN0
sclr => _~26.IN1
sclr => _~29.IN0
sload => _~28.IN1
sload => counter_reg_bit[3]~10.IN1
sset => _~5.IN0
sset => _~6.IN0
sset => _~7.IN0
sset => _~8.IN0
sset => _~9.IN0
sset => _~27.IN1
sset => _~29.IN1
updown => cout_actual~0.IN1
updown => counter_comb_bita0.DATAB
updown => counter_comb_bita1.DATAB
updown => counter_comb_bita2.DATAB
updown => counter_comb_bita3.DATAB


